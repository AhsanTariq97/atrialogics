import Head from 'next/head';
import Link from 'next/link';
import { client } from '../../lib/apollo';
import { gql } from '@apollo/client';
import { useState } from 'react';

import Navbar from '../components/Navbar';
import BlogHomePage from '../components/BlogHomePage';
import Footer from '../components/Footer';
import LoadMoreList from '../components/LoadMoreList'

export default function Home({ posts, postsPageInfo }) {
  
  // console.log(postsPageInfo.pageInfo.endCursor)

  // const [ afterValue, setAfterValue ] = useState(null)

  // const handleNextPage = () => {
  //   if (postsPageInfo.pageInfo.hasNextPage) {
  //     setAfterValue(postsPageInfo.pageInfo.endCursor);
  //   }
  // };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link href="https://fonts.googleapis.com/css2?family=Lexend+Giga:wght@200;300;400;500;600;700;800;900&display=swap"rel="stylesheet"/>
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <body className='overflow-x-hidden'>
        <header>
          <Navbar />
          <div className='py-[50px]'></div>
        </header>
        <main className='max-w-screen-xl mx-auto pb-16'>
          <BlogHomePage posts={posts} />


          {/* <LoadMoreList /> */}


          {/* {postsPageInfo.hasNextPage && (
            <div className='flex flex-col justify-center items-center'>
              <button onClick={handleNextPage}>
                <Link href={`/blogs?afterValue=${afterValue}`}>Next</Link>
              </button>
            </div>
          )} */}


        </main>
        <footer className='w-full'>
          <Footer />
        </footer>
      </body>
    </>
  );
}

// export default function SecondPage() {

//   const { data, loading, error, fetchMore } = await client.query({
//     query: GET_POSTS,
//     variables: {
//       perPage: POSTS_PER_PAGE,
//       offset: 0,
//     },
//     notifyOnNetworkStatusChange: true,
//   });

//   if (error) {
//     return <p>Error occured</p>
//   }
//   if (!data && loading) {
//       return <p>Loading...</p>
//   }
//   if(!data?.posts.edges.length) {
//       return <p>No posts</p>
//   }

//   // const posts = data.posts.edges.map((edge) => edge.node)
//   // const haveMorePosts = Boolean(data?.posts?.pageInfo?.hasNextPage)

//   const onLoadMore = () => {
//     fetchMore({
//       variables: { after: data.posts.pageInfo.endCursor },
//       updateQuery: (previousResult, { fetchMoreResult }) => {
//         const newEdges = fetchMoreResult.posts.edges;
//         const pageInfo = fetchMoreResult.posts.pageInfo;

//         return newEdges.length
//           ? {
//               posts: {
//                 __typename: previousResult.posts.__typename,
//                 edges: [...previousResult.posts.edges, ...newEdges],
//                 pageInfo,
//               },
//             }
//           : previousResult;
//       },
//     });
//   };

//   return {
//     props: {
//       posts: data.posts.edges.map((edge) => edge.node),
//       postsPageInfo: data.posts.pageInfo,
//       morePosts: Boolean(data?.posts?.pageInfo?.hasNextPage),
//     },
//     revalidate: 1,
//   };
// }

// const POSTS_PER_PAGE = 3;


// const GET_POSTS = gql`
// query GetWordPressPosts($offset: Int!, $perPage: Int!) {
//   posts(where: {offsetPagination: {offset: $offset, size: $perPage}, orderby: {field: DATE, order: DESC}}) {
//     pageInfo {
//       offsetPagination {
//         hasMore
//         total
//       }
//     }
//     edges {
//       node {
//         content
//         excerpt
//         slug
//         title
//         featuredImage {
//           node {
//             sourceUrl
//           }
//         }
//         author {
//           node {
//             name
//           }
//         }
//       }
//     }
//   }
// }
// `
